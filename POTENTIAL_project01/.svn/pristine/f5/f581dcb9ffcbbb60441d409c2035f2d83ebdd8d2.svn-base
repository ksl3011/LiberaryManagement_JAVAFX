package com.potential.bookapply.dao;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import org.apache.log4j.Logger;

import com.potential.bookapply.domain.BookApplyVO;


/**
 * @author sist
 *
 */
public class BookApplyDao {

	private List<BookApplyVO> list = new ArrayList<>();
	private String FILE_PATH = "\\211.238.142.124\\hr_data\\java04"; 
	private static Logger LOG = Logger.getLogger(BookApplyDao.class);
	
	//�ʱ�ȭ
	public BookApplyDao(){
		readFile();
	}
	
	//���� �б�
	public void readFile(){
		try {
			BufferedReader br = new BufferedReader(new FileReader(FILE_PATH));
			String line = "";
			
			while((line=br.readLine())!=null){
				if(line.equals("")) break;
				
				String[] lineArr = line.split(",");
				BookApplyVO vo = new BookApplyVO(lineArr[0], lineArr[1], lineArr[2], lineArr[3], lineArr[4], lineArr[5]);
				list.add(vo);
			}
		} catch (FileNotFoundException e) {
			LOG.debug("=====================================");
			LOG.debug("FileNotFoundException:"+e.getMessage());
			LOG.debug("=====================================");
		} catch (IOException e) {
			LOG.debug("=====================================");
			LOG.debug("IOException:"+e.getMessage());
			LOG.debug("=====================================");
		}
	}
	
	//���� �Է� �ޱ�
	public BookApplyVO getInputData(Scanner scanner){
		scanner = new Scanner(System.in);
		String input = scanner.nextLine().trim();
		String[] inputArr = input.split(",");
		BookApplyVO outVO = new BookApplyVO(inputArr[0], inputArr[1], inputArr[2], inputArr[3], inputArr[4], "���");
		return outVO;
	}
	
	//�ߺ� Ȯ���ϱ�
	public boolean isMemberExist(BookApplyVO vo){
		boolean flag = false;
			for(BookApplyVO orgVO :list){
				if(orgVO.getTitle().equals(vo.getTitle())){
					flag=true;
					break;
				}
			}
		return flag;
	}
	
	//���Ͽ� �߰��ϱ�
	public int do_save(BookApplyVO vo){
		int saveCnt=0; 
		for(int i=0; i<list.size(); i++){
			if(list.get(i).getTitle().replaceAll(" ", "").equalsIgnoreCase(vo.getTitle().replaceAll(" ", ""))){
				if(list.get(i).getStatus().equals("�ź�")){
					saveCnt = -1;
					return saveCnt;
				}else{
					saveCnt = 0;
					return saveCnt;
				}
			}
		}
		list.add(vo);
		saveCnt = 1;
		return saveCnt;
	}
	
	//���� �����ϱ�
	public int saveFile(){
		int writeCnt = 0;
		FileWriter writer = null;
		try {
			writer = new FileWriter(FILE_PATH);
			for(int i=0; i<list.size(); i++){
				BookApplyVO vo = list.get(i);
				String strVO = vo.getTitle()+","+vo.getAuthor()+","+vo.getPublisher()+","+vo.getPubYear()+","+vo.getComment()+","+vo.getStatus()+"\n";
				writer.write(strVO);
				writeCnt++;
			}
		} catch (IOException e) {
			LOG.debug("=====================================");
			LOG.debug("IOException:"+e.getMessage());
			LOG.debug("=====================================");
		} finally{
			try {
				writer.close();
			} catch (IOException e) {
				LOG.debug("=====================================");
				LOG.debug("IOException:"+e.getMessage());
				LOG.debug("=====================================");
			}
		}
		return writeCnt;
	}
	
	//��� ��ȸ�ϱ�
	public List<BookApplyVO> do_retrieve(){
		for(int i=0; i<list.size();i++){
			BookApplyVO tmpVO = list.get(i);
			String outMsg = tmpVO.getTitle()+"  "+tmpVO.getStatus();
			LOG.debug(outMsg);
		}
		return list;
	}
	
	//å �������� �˻��ϱ�
	public List<BookApplyVO> do_searchByTitle(String s){
		List<BookApplyVO> searchList = new ArrayList<>();
		BookApplyVO outVO = null;
		String title = s.trim().replace(" ", "");
		
		for(int i=0; i<list.size(); i++){
			outVO = list.get(i);
			if(outVO.getTitle().replaceAll(" ", "").contains(title)){
				searchList.add(outVO);
			}
		}
		return searchList;
	}
	
	//�����ϱ�
	public int do_delete(BookApplyVO inVO){
		int flag = 0;
		BookApplyVO tmp = null;
		for(int i=0; i<list.size(); i++){
			tmp = list.get(i);
			if(tmp.getTitle().equals(inVO.getTitle())){
				list.remove(i);
				flag=1;
			}else flag=0;
		}
		return flag;
	}
	
	//getList
	public List<BookApplyVO> getList(){
		
		return list;
	}
	
}
